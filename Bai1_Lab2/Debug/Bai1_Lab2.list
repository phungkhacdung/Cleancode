
Bai1_Lab2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000408  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800059c  080005a4  000105a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800059c  0800059c  000105a4  2**0
                  CONTENTS
  4 .ARM          00000000  0800059c  0800059c  000105a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800059c  080005a4  000105a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800059c  0800059c  0001059c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005a0  080005a0  000105a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005a4  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005a4  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000105a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000017e8  00000000  00000000  000105d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000057c  00000000  00000000  00011dbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000290  00000000  00000000  00012338  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000258  00000000  00000000  000125c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bca9  00000000  00000000  00012820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000157b  00000000  00000000  0001e4c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003b621  00000000  00000000  0001fa44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  0005b065  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000acc  00000000  00000000  0005b134  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000584 	.word	0x08000584

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000584 	.word	0x08000584

080001d4 <delay_ms>:
#define BUTTONControl_SetClock	RCC_AHB1Periph_GPIOC



void delay_ms(uint32_t milisecond)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	for(uint32_t i= 0;i<milisecond;i++)
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e00d      	b.n	80001fe <delay_ms+0x2a>
	{
		for(uint32_t j=0;j<5000;j++);
 80001e2:	2300      	movs	r3, #0
 80001e4:	60bb      	str	r3, [r7, #8]
 80001e6:	e002      	b.n	80001ee <delay_ms+0x1a>
 80001e8:	68bb      	ldr	r3, [r7, #8]
 80001ea:	3301      	adds	r3, #1
 80001ec:	60bb      	str	r3, [r7, #8]
 80001ee:	68bb      	ldr	r3, [r7, #8]
 80001f0:	f241 3287 	movw	r2, #4999	; 0x1387
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d9f7      	bls.n	80001e8 <delay_ms+0x14>
	for(uint32_t i= 0;i<milisecond;i++)
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	3301      	adds	r3, #1
 80001fc:	60fb      	str	r3, [r7, #12]
 80001fe:	68fa      	ldr	r2, [r7, #12]
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	429a      	cmp	r2, r3
 8000204:	d3ed      	bcc.n	80001e2 <delay_ms+0xe>
	}
}
 8000206:	bf00      	nop
 8000208:	bf00      	nop
 800020a:	3714      	adds	r7, #20
 800020c:	46bd      	mov	sp, r7
 800020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000212:	4770      	bx	lr

08000214 <Led_Init>:
static
void Led_Init(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b082      	sub	sp, #8
 8000218:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(LEDControl_SetClock,ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	2001      	movs	r0, #1
 800021e:	f000 f96d 	bl	80004fc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = LED_GPIO_PIN;
 8000222:	2320      	movs	r3, #32
 8000224:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000226:	2301      	movs	r3, #1
 8000228:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800022a:	2302      	movs	r3, #2
 800022c:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 800022e:	2300      	movs	r3, #0
 8000230:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000232:	2300      	movs	r3, #0
 8000234:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(LED_GPIO_PORT,&GPIO_InitStructure);
 8000236:	463b      	mov	r3, r7
 8000238:	4619      	mov	r1, r3
 800023a:	4803      	ldr	r0, [pc, #12]	; (8000248 <Led_Init+0x34>)
 800023c:	f000 f8cf 	bl	80003de <GPIO_Init>
}
 8000240:	bf00      	nop
 8000242:	3708      	adds	r7, #8
 8000244:	46bd      	mov	sp, r7
 8000246:	bd80      	pop	{r7, pc}
 8000248:	40020000 	.word	0x40020000

0800024c <Button_Init>:


static
void Button_Init(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	b082      	sub	sp, #8
 8000250:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(BUTTONControl_SetClock,ENABLE);
 8000252:	2101      	movs	r1, #1
 8000254:	2004      	movs	r0, #4
 8000256:	f000 f951 	bl	80004fc <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 800025a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800025e:	603b      	str	r3, [r7, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000260:	2300      	movs	r3, #0
 8000262:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000264:	2302      	movs	r3, #2
 8000266:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000268:	2301      	movs	r3, #1
 800026a:	71fb      	strb	r3, [r7, #7]

	GPIO_Init(BUTTON_GPIO_PORT,&GPIO_InitStructure);
 800026c:	463b      	mov	r3, r7
 800026e:	4619      	mov	r1, r3
 8000270:	4803      	ldr	r0, [pc, #12]	; (8000280 <Button_Init+0x34>)
 8000272:	f000 f8b4 	bl	80003de <GPIO_Init>
}
 8000276:	bf00      	nop
 8000278:	3708      	adds	r7, #8
 800027a:	46bd      	mov	sp, r7
 800027c:	bd80      	pop	{r7, pc}
 800027e:	bf00      	nop
 8000280:	40020800 	.word	0x40020800

08000284 <ledControl_SetStatus>:

static
void ledControl_SetStatus(GPIO_TypeDef *GPIOx,uint8_t GPIO_PIN,uint8_t Status)
{
 8000284:	b480      	push	{r7}
 8000286:	b083      	sub	sp, #12
 8000288:	af00      	add	r7, sp, #0
 800028a:	6078      	str	r0, [r7, #4]
 800028c:	460b      	mov	r3, r1
 800028e:	70fb      	strb	r3, [r7, #3]
 8000290:	4613      	mov	r3, r2
 8000292:	70bb      	strb	r3, [r7, #2]
	if(Status == GPIO_PIN_SET)
 8000294:	78bb      	ldrb	r3, [r7, #2]
 8000296:	2b01      	cmp	r3, #1
 8000298:	d10d      	bne.n	80002b6 <ledControl_SetStatus+0x32>
	{
		GPIOx->BSRRL |= 1 << GPIO_PIN;
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	8b1b      	ldrh	r3, [r3, #24]
 800029e:	b29b      	uxth	r3, r3
 80002a0:	b21a      	sxth	r2, r3
 80002a2:	78fb      	ldrb	r3, [r7, #3]
 80002a4:	2101      	movs	r1, #1
 80002a6:	fa01 f303 	lsl.w	r3, r1, r3
 80002aa:	b21b      	sxth	r3, r3
 80002ac:	4313      	orrs	r3, r2
 80002ae:	b21b      	sxth	r3, r3
 80002b0:	b29a      	uxth	r2, r3
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	831a      	strh	r2, [r3, #24]
	}
	if(Status == GPIO_PIN_RESET)
 80002b6:	78bb      	ldrb	r3, [r7, #2]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d10d      	bne.n	80002d8 <ledControl_SetStatus+0x54>
	{
		GPIOx->BSRRH |= 1 << GPIO_PIN;
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	8b5b      	ldrh	r3, [r3, #26]
 80002c0:	b29b      	uxth	r3, r3
 80002c2:	b21a      	sxth	r2, r3
 80002c4:	78fb      	ldrb	r3, [r7, #3]
 80002c6:	2101      	movs	r1, #1
 80002c8:	fa01 f303 	lsl.w	r3, r1, r3
 80002cc:	b21b      	sxth	r3, r3
 80002ce:	4313      	orrs	r3, r2
 80002d0:	b21b      	sxth	r3, r3
 80002d2:	b29a      	uxth	r2, r3
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	835a      	strh	r2, [r3, #26]
	}
}
 80002d8:	bf00      	nop
 80002da:	370c      	adds	r7, #12
 80002dc:	46bd      	mov	sp, r7
 80002de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e2:	4770      	bx	lr

080002e4 <ButtonRead_Status>:

static
uint8_t ButtonRead_Status(GPIO_TypeDef *GPIOx,uint32_t GPIO_PIN)
{
 80002e4:	b480      	push	{r7}
 80002e6:	b085      	sub	sp, #20
 80002e8:	af00      	add	r7, sp, #0
 80002ea:	6078      	str	r0, [r7, #4]
 80002ec:	6039      	str	r1, [r7, #0]
	uint32_t Read_Pin;
	Read_Pin = (GPIOx->IDR) >> GPIO_PIN;
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	691a      	ldr	r2, [r3, #16]
 80002f2:	683b      	ldr	r3, [r7, #0]
 80002f4:	fa22 f303 	lsr.w	r3, r2, r3
 80002f8:	60fb      	str	r3, [r7, #12]
	Read_Pin = Read_Pin & 0x01;
 80002fa:	68fb      	ldr	r3, [r7, #12]
 80002fc:	f003 0301 	and.w	r3, r3, #1
 8000300:	60fb      	str	r3, [r7, #12]
	return Read_Pin;
 8000302:	68fb      	ldr	r3, [r7, #12]
 8000304:	b2db      	uxtb	r3, r3
}
 8000306:	4618      	mov	r0, r3
 8000308:	3714      	adds	r7, #20
 800030a:	46bd      	mov	sp, r7
 800030c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000310:	4770      	bx	lr
	...

08000314 <main>:

int main(void)
{
 8000314:	b580      	push	{r7, lr}
 8000316:	b082      	sub	sp, #8
 8000318:	af00      	add	r7, sp, #0
	Led_Init();
 800031a:	f7ff ff7b 	bl	8000214 <Led_Init>
	Button_Init();
 800031e:	f7ff ff95 	bl	800024c <Button_Init>
	_Bool check = 0;
 8000322:	2300      	movs	r3, #0
 8000324:	71fb      	strb	r3, [r7, #7]
	while(1)
	{

		if(ButtonRead_Status(BUTTON_GPIO_PORT,BUTTON_PIN13)==0)
 8000326:	210d      	movs	r1, #13
 8000328:	4816      	ldr	r0, [pc, #88]	; (8000384 <main+0x70>)
 800032a:	f7ff ffdb 	bl	80002e4 <ButtonRead_Status>
 800032e:	4603      	mov	r3, r0
 8000330:	2b00      	cmp	r3, #0
 8000332:	d1f8      	bne.n	8000326 <main+0x12>
		{
			delay_ms(20);
 8000334:	2014      	movs	r0, #20
 8000336:	f7ff ff4d 	bl	80001d4 <delay_ms>
			if(ButtonRead_Status(BUTTON_GPIO_PORT,BUTTON_PIN13)==0)
 800033a:	210d      	movs	r1, #13
 800033c:	4811      	ldr	r0, [pc, #68]	; (8000384 <main+0x70>)
 800033e:	f7ff ffd1 	bl	80002e4 <ButtonRead_Status>
 8000342:	4603      	mov	r3, r0
 8000344:	2b00      	cmp	r3, #0
 8000346:	d1ee      	bne.n	8000326 <main+0x12>
			{
				check = !check;
 8000348:	79fb      	ldrb	r3, [r7, #7]
 800034a:	2b00      	cmp	r3, #0
 800034c:	bf14      	ite	ne
 800034e:	2301      	movne	r3, #1
 8000350:	2300      	moveq	r3, #0
 8000352:	b2db      	uxtb	r3, r3
 8000354:	f083 0301 	eor.w	r3, r3, #1
 8000358:	b2db      	uxtb	r3, r3
 800035a:	71fb      	strb	r3, [r7, #7]
 800035c:	79fb      	ldrb	r3, [r7, #7]
 800035e:	f003 0301 	and.w	r3, r3, #1
 8000362:	71fb      	strb	r3, [r7, #7]
				ledControl_SetStatus(LED_GPIO_PORT, LED_PIN5,check);
 8000364:	79fb      	ldrb	r3, [r7, #7]
 8000366:	461a      	mov	r2, r3
 8000368:	2105      	movs	r1, #5
 800036a:	4807      	ldr	r0, [pc, #28]	; (8000388 <main+0x74>)
 800036c:	f7ff ff8a 	bl	8000284 <ledControl_SetStatus>
				while(ButtonRead_Status(BUTTON_GPIO_PORT,BUTTON_PIN13)==0);
 8000370:	bf00      	nop
 8000372:	210d      	movs	r1, #13
 8000374:	4803      	ldr	r0, [pc, #12]	; (8000384 <main+0x70>)
 8000376:	f7ff ffb5 	bl	80002e4 <ButtonRead_Status>
 800037a:	4603      	mov	r3, r0
 800037c:	2b00      	cmp	r3, #0
 800037e:	d0f8      	beq.n	8000372 <main+0x5e>
		if(ButtonRead_Status(BUTTON_GPIO_PORT,BUTTON_PIN13)==0)
 8000380:	e7d1      	b.n	8000326 <main+0x12>
 8000382:	bf00      	nop
 8000384:	40020800 	.word	0x40020800
 8000388:	40020000 	.word	0x40020000

0800038c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800038c:	480d      	ldr	r0, [pc, #52]	; (80003c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800038e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000390:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000394:	480c      	ldr	r0, [pc, #48]	; (80003c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000396:	490d      	ldr	r1, [pc, #52]	; (80003cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000398:	4a0d      	ldr	r2, [pc, #52]	; (80003d0 <LoopForever+0xe>)
  movs r3, #0
 800039a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800039c:	e002      	b.n	80003a4 <LoopCopyDataInit>

0800039e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800039e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003a2:	3304      	adds	r3, #4

080003a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003a8:	d3f9      	bcc.n	800039e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003aa:	4a0a      	ldr	r2, [pc, #40]	; (80003d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003ac:	4c0a      	ldr	r4, [pc, #40]	; (80003d8 <LoopForever+0x16>)
  movs r3, #0
 80003ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003b0:	e001      	b.n	80003b6 <LoopFillZerobss>

080003b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b4:	3204      	adds	r2, #4

080003b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003b8:	d3fb      	bcc.n	80003b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ba:	f000 f8bf 	bl	800053c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003be:	f7ff ffa9 	bl	8000314 <main>

080003c2 <LoopForever>:

LoopForever:
    b LoopForever
 80003c2:	e7fe      	b.n	80003c2 <LoopForever>
  ldr   r0, =_estack
 80003c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80003c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003d0:	080005a4 	.word	0x080005a4
  ldr r2, =_sbss
 80003d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003d8:	2000001c 	.word	0x2000001c

080003dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003dc:	e7fe      	b.n	80003dc <ADC_IRQHandler>

080003de <GPIO_Init>:
 80003de:	b480      	push	{r7}
 80003e0:	b087      	sub	sp, #28
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	6078      	str	r0, [r7, #4]
 80003e6:	6039      	str	r1, [r7, #0]
 80003e8:	2300      	movs	r3, #0
 80003ea:	617b      	str	r3, [r7, #20]
 80003ec:	2300      	movs	r3, #0
 80003ee:	613b      	str	r3, [r7, #16]
 80003f0:	2300      	movs	r3, #0
 80003f2:	60fb      	str	r3, [r7, #12]
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	e076      	b.n	80004e8 <GPIO_Init+0x10a>
 80003fa:	2201      	movs	r2, #1
 80003fc:	697b      	ldr	r3, [r7, #20]
 80003fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000402:	613b      	str	r3, [r7, #16]
 8000404:	683b      	ldr	r3, [r7, #0]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	693a      	ldr	r2, [r7, #16]
 800040a:	4013      	ands	r3, r2
 800040c:	60fb      	str	r3, [r7, #12]
 800040e:	68fa      	ldr	r2, [r7, #12]
 8000410:	693b      	ldr	r3, [r7, #16]
 8000412:	429a      	cmp	r2, r3
 8000414:	d165      	bne.n	80004e2 <GPIO_Init+0x104>
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681a      	ldr	r2, [r3, #0]
 800041a:	697b      	ldr	r3, [r7, #20]
 800041c:	005b      	lsls	r3, r3, #1
 800041e:	2103      	movs	r1, #3
 8000420:	fa01 f303 	lsl.w	r3, r1, r3
 8000424:	43db      	mvns	r3, r3
 8000426:	401a      	ands	r2, r3
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	601a      	str	r2, [r3, #0]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	681a      	ldr	r2, [r3, #0]
 8000430:	683b      	ldr	r3, [r7, #0]
 8000432:	791b      	ldrb	r3, [r3, #4]
 8000434:	4619      	mov	r1, r3
 8000436:	697b      	ldr	r3, [r7, #20]
 8000438:	005b      	lsls	r3, r3, #1
 800043a:	fa01 f303 	lsl.w	r3, r1, r3
 800043e:	431a      	orrs	r2, r3
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	601a      	str	r2, [r3, #0]
 8000444:	683b      	ldr	r3, [r7, #0]
 8000446:	791b      	ldrb	r3, [r3, #4]
 8000448:	2b01      	cmp	r3, #1
 800044a:	d003      	beq.n	8000454 <GPIO_Init+0x76>
 800044c:	683b      	ldr	r3, [r7, #0]
 800044e:	791b      	ldrb	r3, [r3, #4]
 8000450:	2b02      	cmp	r3, #2
 8000452:	d12e      	bne.n	80004b2 <GPIO_Init+0xd4>
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	689a      	ldr	r2, [r3, #8]
 8000458:	697b      	ldr	r3, [r7, #20]
 800045a:	005b      	lsls	r3, r3, #1
 800045c:	2103      	movs	r1, #3
 800045e:	fa01 f303 	lsl.w	r3, r1, r3
 8000462:	43db      	mvns	r3, r3
 8000464:	401a      	ands	r2, r3
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	609a      	str	r2, [r3, #8]
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	689a      	ldr	r2, [r3, #8]
 800046e:	683b      	ldr	r3, [r7, #0]
 8000470:	795b      	ldrb	r3, [r3, #5]
 8000472:	4619      	mov	r1, r3
 8000474:	697b      	ldr	r3, [r7, #20]
 8000476:	005b      	lsls	r3, r3, #1
 8000478:	fa01 f303 	lsl.w	r3, r1, r3
 800047c:	431a      	orrs	r2, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	609a      	str	r2, [r3, #8]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	685a      	ldr	r2, [r3, #4]
 8000486:	697b      	ldr	r3, [r7, #20]
 8000488:	b29b      	uxth	r3, r3
 800048a:	4619      	mov	r1, r3
 800048c:	2301      	movs	r3, #1
 800048e:	408b      	lsls	r3, r1
 8000490:	43db      	mvns	r3, r3
 8000492:	401a      	ands	r2, r3
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	605a      	str	r2, [r3, #4]
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	685b      	ldr	r3, [r3, #4]
 800049c:	683a      	ldr	r2, [r7, #0]
 800049e:	7992      	ldrb	r2, [r2, #6]
 80004a0:	4611      	mov	r1, r2
 80004a2:	697a      	ldr	r2, [r7, #20]
 80004a4:	b292      	uxth	r2, r2
 80004a6:	fa01 f202 	lsl.w	r2, r1, r2
 80004aa:	b292      	uxth	r2, r2
 80004ac:	431a      	orrs	r2, r3
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	605a      	str	r2, [r3, #4]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	68da      	ldr	r2, [r3, #12]
 80004b6:	697b      	ldr	r3, [r7, #20]
 80004b8:	b29b      	uxth	r3, r3
 80004ba:	005b      	lsls	r3, r3, #1
 80004bc:	2103      	movs	r1, #3
 80004be:	fa01 f303 	lsl.w	r3, r1, r3
 80004c2:	43db      	mvns	r3, r3
 80004c4:	401a      	ands	r2, r3
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	60da      	str	r2, [r3, #12]
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	68da      	ldr	r2, [r3, #12]
 80004ce:	683b      	ldr	r3, [r7, #0]
 80004d0:	79db      	ldrb	r3, [r3, #7]
 80004d2:	4619      	mov	r1, r3
 80004d4:	697b      	ldr	r3, [r7, #20]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	fa01 f303 	lsl.w	r3, r1, r3
 80004dc:	431a      	orrs	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	60da      	str	r2, [r3, #12]
 80004e2:	697b      	ldr	r3, [r7, #20]
 80004e4:	3301      	adds	r3, #1
 80004e6:	617b      	str	r3, [r7, #20]
 80004e8:	697b      	ldr	r3, [r7, #20]
 80004ea:	2b0f      	cmp	r3, #15
 80004ec:	d985      	bls.n	80003fa <GPIO_Init+0x1c>
 80004ee:	bf00      	nop
 80004f0:	371c      	adds	r7, #28
 80004f2:	46bd      	mov	sp, r7
 80004f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f8:	4770      	bx	lr
	...

080004fc <RCC_AHB1PeriphClockCmd>:
 80004fc:	b480      	push	{r7}
 80004fe:	b083      	sub	sp, #12
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
 8000504:	460b      	mov	r3, r1
 8000506:	70fb      	strb	r3, [r7, #3]
 8000508:	78fb      	ldrb	r3, [r7, #3]
 800050a:	2b00      	cmp	r3, #0
 800050c:	d006      	beq.n	800051c <RCC_AHB1PeriphClockCmd+0x20>
 800050e:	4b0a      	ldr	r3, [pc, #40]	; (8000538 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000512:	4909      	ldr	r1, [pc, #36]	; (8000538 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	4313      	orrs	r3, r2
 8000518:	630b      	str	r3, [r1, #48]	; 0x30
 800051a:	e006      	b.n	800052a <RCC_AHB1PeriphClockCmd+0x2e>
 800051c:	4b06      	ldr	r3, [pc, #24]	; (8000538 <RCC_AHB1PeriphClockCmd+0x3c>)
 800051e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	43db      	mvns	r3, r3
 8000524:	4904      	ldr	r1, [pc, #16]	; (8000538 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000526:	4013      	ands	r3, r2
 8000528:	630b      	str	r3, [r1, #48]	; 0x30
 800052a:	bf00      	nop
 800052c:	370c      	adds	r7, #12
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	40023800 	.word	0x40023800

0800053c <__libc_init_array>:
 800053c:	b570      	push	{r4, r5, r6, lr}
 800053e:	4d0d      	ldr	r5, [pc, #52]	; (8000574 <__libc_init_array+0x38>)
 8000540:	4c0d      	ldr	r4, [pc, #52]	; (8000578 <__libc_init_array+0x3c>)
 8000542:	1b64      	subs	r4, r4, r5
 8000544:	10a4      	asrs	r4, r4, #2
 8000546:	2600      	movs	r6, #0
 8000548:	42a6      	cmp	r6, r4
 800054a:	d109      	bne.n	8000560 <__libc_init_array+0x24>
 800054c:	4d0b      	ldr	r5, [pc, #44]	; (800057c <__libc_init_array+0x40>)
 800054e:	4c0c      	ldr	r4, [pc, #48]	; (8000580 <__libc_init_array+0x44>)
 8000550:	f000 f818 	bl	8000584 <_init>
 8000554:	1b64      	subs	r4, r4, r5
 8000556:	10a4      	asrs	r4, r4, #2
 8000558:	2600      	movs	r6, #0
 800055a:	42a6      	cmp	r6, r4
 800055c:	d105      	bne.n	800056a <__libc_init_array+0x2e>
 800055e:	bd70      	pop	{r4, r5, r6, pc}
 8000560:	f855 3b04 	ldr.w	r3, [r5], #4
 8000564:	4798      	blx	r3
 8000566:	3601      	adds	r6, #1
 8000568:	e7ee      	b.n	8000548 <__libc_init_array+0xc>
 800056a:	f855 3b04 	ldr.w	r3, [r5], #4
 800056e:	4798      	blx	r3
 8000570:	3601      	adds	r6, #1
 8000572:	e7f2      	b.n	800055a <__libc_init_array+0x1e>
 8000574:	0800059c 	.word	0x0800059c
 8000578:	0800059c 	.word	0x0800059c
 800057c:	0800059c 	.word	0x0800059c
 8000580:	080005a0 	.word	0x080005a0

08000584 <_init>:
 8000584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000586:	bf00      	nop
 8000588:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800058a:	bc08      	pop	{r3}
 800058c:	469e      	mov	lr, r3
 800058e:	4770      	bx	lr

08000590 <_fini>:
 8000590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000592:	bf00      	nop
 8000594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000596:	bc08      	pop	{r3}
 8000598:	469e      	mov	lr, r3
 800059a:	4770      	bx	lr
